{"version":3,"sources":["Components/PageContainers/PageContainer.tsx","Components/PageTitles/PageTitles.tsx","Components/Welcome/Welcome.tsx"],"names":["PageContainer","children","classes","useStyles","className","main","makeStyles","name","theme","margin","spacing","padding","PageTitles","title","icon","container","fontSize","variant","width","display","alignItems","marginBottom","marginRight","color","palette","primary","Welcome","useContext","UserContext","login","user","isUserLoading","useState","email","setEmail","password","setPassword","navigate","useNavigate","onSubmit","event","preventDefault","useEffect","AppRouteManageBooks","path","replace","id","toString","root","header","splitLayoutContainer","loginContainer","label","value","onChange","target","type","disabled","onClick","textContainer","gutterBottom","height","flexDirection","justifyContent","gridTemplateColumns","gridTemplateAreas","gridArea","marginTop","minWidth","border","secondary","borderRadius","overflow"],"mappings":"4GAAA,yBAUeA,IALuC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/CC,EAAYC,IAAZD,QACR,OAAO,qBAAKE,UAAWF,EAAQG,KAAxB,SAA+BJ,KAKxC,IAAME,EAAYG,qBAAW,CAAEC,KAAM,iBAAnBD,EAAsC,SAACE,GAAD,MAAY,CAClEH,KAAM,CACJI,OAAQD,EAAME,QAAQ,EAAG,GACzBC,QAASH,EAAME,QAAQ,EAAG,S,iCCf9B,oDAsBeE,IAZoC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACnDZ,EAAYC,IAAZD,QACR,OACE,sBAAKE,UAAWF,EAAQa,UAAxB,UACE,qBAAKX,UAAWF,EAAQY,KAAxB,SACGA,GAAQ,cAAC,IAAD,CAAiBE,SAAU,YAEtC,cAAC,IAAD,CAAYC,QAAS,KAArB,SAA4BJ,QAOlC,IAAMV,EAAYG,qBAAW,CAAEC,KAAM,cAAnBD,EAAmC,SAACE,GAAD,MAAY,CAC/DO,UAAW,CACTG,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,aAAcb,EAAME,QAAQ,IAE9BI,KAAM,CACJQ,YAAad,EAAME,QAAQ,GAC3Ba,MAAOf,EAAMgB,QAAQC,QAAQpB,W,uJCwDlBqB,UAxE2B,WACxC,MAAuCC,qBAAWC,KAA1CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,cACb7B,EAAYC,IAAZD,QACR,EAA0B8B,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAEXC,EAA6B,SAACC,GAClCA,EAAMC,iBACNZ,EAAMI,IAWR,OARAS,qBAAU,WACJZ,GACFO,EAAS,GAAD,OACHM,IAAoBC,KAAKC,QAAQ,UAAWf,EAAKgB,GAAGC,gBAG1D,CAACjB,IAGF,cAAC,IAAD,UACE,sBAAK1B,UAAWF,EAAQ8C,KAAxB,UACE,qBAAK5C,UAAWF,EAAQ+C,OAAxB,SACE,cAAC,IAAD,CAAYpC,MAAO,eAErB,sBAAKT,UAAWF,EAAQgD,qBAAxB,UACE,uBAAMX,SAAUA,EAAUnC,UAAWF,EAAQiD,eAA7C,UACE,cAAC,IAAD,CAAYlC,QAAS,KAArB,SAA2B,mBAC3B,cAAC,IAAD,CACEmC,MAAO,QACPC,MAAOpB,EACPqB,SAAU,SAACd,GAAD,OAAWN,EAASM,EAAMe,OAAOF,UAE7C,cAAC,IAAD,CACED,MAAO,WACPC,MAAOlB,EACPqB,KAAM,WACNF,SAAU,SAACd,GAAD,OAAWJ,EAAYI,EAAMe,OAAOF,UAEhD,cAAC,IAAD,CACEI,SAAU1B,EACVlB,MAAM,SACN2C,KAAM,SACNE,QAASnB,EACTtB,QAAS,YACTM,MAAO,UANT,SAQGQ,EACC,cAAC,IAAD,CAAkBR,MAAO,cAEzB,cAIN,sBAAKnB,UAAWF,EAAQyD,cAAxB,UACE,cAAC,IAAD,CAAY1C,QAAS,KAAM2C,cAAY,EAAvC,SAAwC,8BAGxC,cAAC,IAAD,CAAY3C,QAAS,QAArB,SAA8B,6MAc1C,IAAMd,EAAYG,qBAAW,CAAEC,KAAM,WAAnBD,EAAgC,SAACE,GAAD,MAAY,CAC5DwC,KAAM,CACJ9B,MAAO,OACP2C,OAAQ,OACRC,cAAe,SACf3C,QAAS,OACT4C,eAAgB,SAChB3C,WAAY,UAEd6B,OAAQ,CACNxC,OAAQ,QAEVyC,qBAAsB,CACpBhC,MAAO,OACPC,QAAS,OACT2C,cAAe,MACfE,oBAAqB,YACrBC,kBAAmB,cAErBd,eAAgB,CACde,SAAU,QACV/C,QAAS,OACT2C,cAAe,SACfC,eAAgB,eAChBI,UAAW3D,EAAME,QAAQ,GACzBC,QAASH,EAAME,QAAQ,GACvB0D,SAAU,QACVP,OAAQ,QACRQ,OAAO,aAAD,OAAe7D,EAAMgB,QAAQ8C,UAAUjE,MAC7CkE,aAAc,IAEhBZ,cAAe,CACbO,SAAU,OACVzD,OAAQD,EAAME,QAAQ,EAAG,GACzB8D,SAAU","file":"static/js/9.47712e3c.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"tss-react/mui\";\n\ninterface Props {}\n\nconst PageContainer: React.FunctionComponent<Props> = ({ children }) => {\n  const { classes } = useStyles();\n  return <div className={classes.main}>{children}</div>;\n};\n\nexport default PageContainer;\n\nconst useStyles = makeStyles({ name: \"PageContainer\" })((theme) => ({\n  main: {\n    margin: theme.spacing(0, 3),\n    padding: theme.spacing(1, 3),\n  },\n}));\n","import React from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { makeStyles } from \"tss-react/mui\";\nimport AutoStoriesIcon from \"@mui/icons-material/AutoStories\";\n\ninterface Props {\n  title: string;\n  icon?: React.ReactNode;\n}\n\nconst PageTitles: React.FunctionComponent<Props> = ({ title, icon }) => {\n  const { classes } = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.icon}>\n        {icon || <AutoStoriesIcon fontSize={\"large\"} />}\n      </div>\n      <Typography variant={\"h4\"}>{title}</Typography>\n    </div>\n  );\n};\n\nexport default PageTitles;\n\nconst useStyles = makeStyles({ name: \"PageTitles\" })((theme) => ({\n  container: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginBottom: theme.spacing(2),\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n    color: theme.palette.primary.main,\n  },\n}));\n","import {\n  FunctionComponent,\n  FormEventHandler,\n  useState,\n  useContext,\n  useEffect,\n} from \"react\";\nimport { Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { makeStyles } from \"tss-react/mui\";\nimport { UserContext } from \"../../contexts/UserContext\";\nimport { AppRouteManageBooks } from \"../../AppRoutes\";\nimport PageTitles from \"../PageTitles/PageTitles\";\nimport PageContainer from \"../PageContainers/PageContainer\";\n\ninterface Props {}\n\nconst Welcome: FunctionComponent<Props> = () => {\n  const { login, user, isUserLoading } = useContext(UserContext);\n  const { classes } = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const onSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    login(email);\n  };\n\n  useEffect(() => {\n    if (user) {\n      navigate(\n        `${AppRouteManageBooks.path.replace(\":userId\", user.id.toString())}`\n      );\n    }\n  }, [user]);\n\n  return (\n    <PageContainer>\n      <div className={classes.root}>\n        <div className={classes.header}>\n          <PageTitles title={\"Welcome!\"} />\n        </div>\n        <div className={classes.splitLayoutContainer}>\n          <form onSubmit={onSubmit} className={classes.loginContainer}>\n            <Typography variant={\"h6\"}>Please log in.</Typography>\n            <TextField\n              label={\"Email\"}\n              value={email}\n              onChange={(event) => setEmail(event.target.value)}\n            />\n            <TextField\n              label={\"Password\"}\n              value={password}\n              type={\"password\"}\n              onChange={(event) => setPassword(event.target.value)}\n            />\n            <Button\n              disabled={isUserLoading}\n              title=\"Log in\"\n              type={\"submit\"}\n              onClick={onSubmit}\n              variant={\"contained\"}\n              color={\"primary\"}\n            >\n              {isUserLoading ? (\n                <CircularProgress color={\"secondary\"} />\n              ) : (\n                \"Log in\"\n              )}\n            </Button>\n          </form>\n          <div className={classes.textContainer}>\n            <Typography variant={\"h6\"} gutterBottom>\n              Welcome to my little app!\n            </Typography>\n            <Typography variant={\"body1\"}>\n              This is a book search and bookshelf where you can view, rate, and\n              save your favorite books. Log in at the left - don't worry, if you\n              don't have an account already we'll create one for you!\n            </Typography>\n          </div>\n        </div>\n      </div>\n    </PageContainer>\n  );\n};\n\nexport default Welcome;\n\nconst useStyles = makeStyles({ name: \"Welcome\" })((theme) => ({\n  root: {\n    width: \"100%\",\n    height: \"100%\",\n    flexDirection: \"column\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  header: {\n    margin: \"20px\",\n  },\n  splitLayoutContainer: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    gridTemplateColumns: \"400px 1fr\",\n    gridTemplateAreas: \"login text\",\n  },\n  loginContainer: {\n    gridArea: \"login\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(2),\n    minWidth: \"400px\",\n    height: \"400px\",\n    border: `2px solid ${theme.palette.secondary.main}`,\n    borderRadius: 20,\n  },\n  textContainer: {\n    gridArea: \"text\",\n    margin: theme.spacing(2, 4),\n    overflow: \"auto\",\n  },\n}));\n"],"sourceRoot":""}