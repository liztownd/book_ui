{"version":3,"sources":["AppRoutes.ts","contexts/UserContext.tsx","contexts/BooksContext.tsx","Components/PageLoading/PageLoading.tsx","Components/Books/BooksContextProvider.tsx","Router.tsx","theme/BookTheme.ts","App.tsx","index.tsx"],"names":["AppRouteBooks","title","path","AppRouteBooksSearch","AppRouteManageBooks","UserContext","createContext","Provider","children","useState","user","setUser","isUserLoading","setIsUserLoading","login","email","url","process","fetch","method","headers","body","JSON","stringify","then","res","json","response","id","enqueueSnackbar","variant","message","Error","value","BooksContext","apiBaseUrl","googleApiUrl","userId","useParams","useContext","userBooks","setUserBooks","selectedBook","setSelectedBook","searchResults","setSearchResults","isSearchLoading","setIsSearchLoading","getUser","useCallback","a","useEffect","getUserBooksList","toString","addBook","userInput","userBook","user_id","Promise","resolve","addedBook","clonedBooks","updatedBooks","deleteBook","filter","book","updateStatus","status","read","i","length","updateRating","newRating","rating","getBook","data","bookSearch","searchParams","titleQuery","authorQuery","author","publisherQuery","publisher","keywordQuery","keyword","query","books","totalItems","items","inUserList","bookId","find","book_id","PageLoading","style","width","height","display","justifyContent","alignItems","CircularProgress","size","BooksContextProvider","BooksSearch","lazy","Welcome","ManageBooks","Router","fallback","element","bookTheme","createTheme","palette","primary","light","main","dark","contrastText","secondary","background","default","blueGrey","spacing","App","ThemeProvider","theme","ReactDOM","document","getElementById"],"mappings":"2GAIA,sGAAO,IAAMA,EAAgB,CAC3BC,MAAM,cACNC,KAAK,8BAGMC,EAAsB,CACjCF,MAAM,cACNC,KAAK,qCAGME,EAAsB,CACjCH,MAAM,WACNC,KAAK,sC,4JCAMG,EAAcC,wBAA4B,IAI1CC,EAAqC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAGnD,EAAwBC,qBAA6B,mBAA9CC,EAAI,KAAEC,EAAO,KACpB,EAA0CF,oBAAS,GAAM,mBAAlDG,EAAa,KAAEC,EAAgB,KAEhCC,EAAK,uCAAG,WAAOC,GAAa,yEAEP,OADzBF,GAAiB,GACXG,EAAG,UANQC,oDAMQ,4BAEAC,MAAMF,EAAK,CAChCG,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBS,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EARIC,EAAQ,OASdhB,EAAQ,CAAEI,MAAOY,EAASZ,MAAOa,GAAID,EAASC,KAC9Cf,GAAiB,GAAO,wBAGA,MAHA,0BAExBgB,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UACnDlB,GAAiB,GACX,IAAImB,MAAM,EAAD,IAAQ,KAAD,qDAEzB,gBApBU,sCAsBX,OACE,cAAC3B,EAAYE,SAAQ,CAAC0B,MAAO,CAAEvB,OAAMC,UAASG,QAAOF,iBAAgB,SAClEJ,M,2LC5BM0B,EAAe5B,wBAA6B,IAI5CC,EAAqC,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SAE7C2B,EAAalB,oDAEbmB,EAAe,8CAEbC,EAAWC,cAAXD,OACR,EAA0BE,qBAAWlC,KAA7BK,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAGd,EAAkCF,mBAAsB,IAAG,mBAApD+B,EAAS,KAAEC,EAAY,KAC9B,EAAwChC,qBAAmC,mBAApEiC,EAAY,KAAEC,EAAe,KACpC,EAA0ClC,qBAEvC,mBAFImC,EAAa,KAAEC,EAAgB,KAItC,EAA8CpC,oBAAS,GAAM,mBAAtDqC,EAAe,KAAEC,EAAkB,KAEpCC,EAAUC,sBAAW,sBAAC,8BAAAC,EAAA,sDACe,OAAnClC,EAAG,UAAMmB,EAAU,kBAAUE,GAAM,kBAEhBnB,MAAMF,EAAK,CAChCG,OAAQ,QACPK,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EAJIC,EAAQ,OAMdhB,EAAQ,CAAEI,MAAOY,EAASZ,MAAOa,GAAID,EAASC,KAAM,uBAEU,MAFV,yBAEpDC,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,oDAEvB,CAACtB,IAGJyC,qBAAU,WACHzC,GACHsC,MAED,CAACtC,IAEJ,IAAM0C,EAAgB,uCAAG,8BAAAF,EAAA,sDACwC,OAAzDlC,EAAG,UAAMmB,EAAU,2BAAuB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,GAAGyB,YAAU,kBAEtCnC,MAAMF,EAAK,CAChCG,OAAQ,QACPK,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EAJIC,EAAQ,OAKdc,EAAad,GAAU,uBAEuC,MAFvC,yBAEvBE,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,oDAEzB,kBAbqB,mCAgBtBmB,qBAAU,WACHzC,GAGL0C,MACC,CAAC1C,IAGJ,IAAM4C,EAAO,uCAAG,WAAOC,GAA6B,+EAGzB,OAFnBC,EAAQ,2BACTD,GAAS,IACZE,SAAa,OAAJ/C,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,KAAM,KAAE,kBAGAV,MAAM,GAAD,OAAIiB,EAAU,UAAU,CAClDhB,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUiC,KACpBhC,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EARY,OAARC,EAAQ,gBASU+B,QAAQC,QAAQhC,GAAU,KAAD,GAA3CiC,EAAS,UAEPC,EAAW,YAAOrB,GAClBsB,EAAY,sBAAOD,GAAW,CAAED,IACtCnB,EAAaqB,IACd,wBAE6D,MAF7D,0BAEDjC,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,qDAEzB,gBAzBY,sCA4BP+B,EAAU,uCAAG,WAAOnC,GAAU,kGAE1BV,MAAM,GAAD,OAAIiB,EAAU,kBAAUP,GAAM,CACvCT,OAAQ,WACPK,MAAK,SAACC,GACP,OAAOA,KACN,KAAD,EACIoC,EAAW,YAAOrB,GAClBsB,EAAeD,EAAYG,QAAO,SAACC,GAAI,OAAKA,EAAKrC,KAAOA,KAC9Da,EAAaqB,GAAc,uBAEmC,MAFnC,yBAE3BjC,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,oDAEzB,gBAde,sCAiBVkC,EAAY,uCAAG,WAAOtC,EAAYuC,GAAe,oGAE5BjD,MAAM,GAAD,OAAIiB,EAAU,kBAAUP,GAAM,CACxDT,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE6C,KAAMD,MAC5B3C,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EARY,OAARC,EAAQ,gBASY+B,QAAQC,QAAQhC,GAAU,KAAD,EACnD,GADiB,OACA,CAEf,IADMkC,EAAW,YAAOrB,GACf6B,EAAI,EAAGA,EAAIR,EAAYS,OAAQD,IAClCR,EAAYQ,GAAGzC,KAAOA,IACxBiC,EAAYQ,GAAGD,KAAOD,GAG1B1B,EAAaoB,GACd,wBAE6D,MAF7D,0BAEDhC,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,qDAEzB,gBAzBiB,wCA4BZuC,EAAY,uCAAG,WAAO3C,EAAY4C,GAAiB,oGAE9BtD,MAAM,GAAD,OAAIiB,EAAU,kBAAUP,GAAM,CACxDT,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEkD,OAAQD,MAC9BhD,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EARY,OAARC,EAAQ,gBASY+B,QAAQC,QAAQhC,GAAU,KAAD,EACnD,GADiB,OACA,CAEf,IADMkC,EAAW,YAAOrB,GACf6B,EAAI,EAAGA,EAAIR,EAAYS,OAAQD,IAClCR,EAAYQ,GAAGzC,KAAOA,IACxBiC,EAAYQ,GAAGI,OAASD,GAG5B/B,EAAaoB,GACd,wBAE6D,MAF7D,0BAEDhC,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,qDAEzB,gBAzBiB,wCA6BZ0C,EAAO,uCAAG,WAAO9C,GAAU,2EACE,OAA3BZ,EAAG,UAAMoB,EAAY,YAAIR,GAAE,kBAERV,MAAMF,EAAK,CAAEG,OAAQ,QAASK,MAAK,SAACC,GAAG,OAC5DA,EAAIC,OAAOF,MAAK,SAACmD,GAAI,OAAKA,QAC1B,KAAD,EAFa,OAARhD,EAAQ,gBAGK+B,QAAQC,QAAQhC,GAAU,KAAD,EAAtCsC,EAAI,OACVtB,EAAgBsB,GAAM,wBAEwC,MAFxC,0BAEtBpC,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,qDAEzB,gBAZY,sCAeP4C,EAAU,uCAAG,WAAOC,GAA2B,mFAkBnC,OAjBhB9B,GAAmB,GAEb+B,EAAaD,EAAa5E,MAAMqE,OAAM,mBAC5BO,EAAa5E,OACzB,GACE8E,EAAcF,EAAaG,OAAOV,OAAM,oBAC7BO,EAAaG,QAC1B,GACEC,EAAiBJ,EAAaK,UAAUZ,OAAM,uBAChCO,EAAaK,WAC7B,GACEC,EAAeN,EAAaO,SAAW,GACvCC,EACJ,UAAGjD,EAAY,OACf+C,EACAL,EACAC,EACAE,EAAe,EAAD,gBAGS/D,MAAMmE,EAAO,CAClClE,OAAQ,QACPK,MAAK,SAACC,GACP,OAAOA,EAAIC,UACV,KAAD,EAJY,OAARC,EAAQ,iBAKM+B,QAAQC,QAAQhC,GAAU,KAAD,GAAvC2D,EAAK,OACXzC,EAAsC,IAArByC,EAAMC,WAAmB,GAAKD,EAAME,OAAO,wBAEE,MAFF,0BAE5D3D,YAAgB,CAAEC,QAAS,QAASC,QAAS,KAAMA,UAC7C,IAAIC,MAAM,EAAD,IAAQ,KAAD,GAExBe,GAAmB,GAAO,0DAC3B,gBAjCe,sCAuChB,OACE,cAACb,EAAa3B,SAAQ,CACpB0B,MAAO,CACLO,YACAkC,UACAhC,eACAC,kBACAW,UACAS,aACAa,aACAhC,gBACA6C,WAfa,SAACC,GAClB,OAAOlD,EAAUmD,MAAK,SAAC1B,GAAI,OAAKA,EAAK2B,UAAYF,MAe7CxB,eACAK,eACAzB,mBACA,SAEDtC,M,mLCnPQqF,EAhB+B,WAC5C,OACE,qBACEC,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACZ,SAEF,cAACC,EAAA,EAAgB,CAACC,KAAM,Y,QCFfC,EARwC,WACrD,OACE,cAAC,IAAa,UACZ,cAAC,IAAM,OCAPC,EAAcC,gBAAK,kBAAM,qEACzBC,EAAUD,gBAAK,kBAAM,8DACrBE,EAAcF,gBAAK,kBAAM,qEA6BhBG,EAzB0B,WACvC,OACE,cAAC,WAAQ,CAACC,SAAU,cAAC,EAAW,IAAI,SAClC,cAAC,IAAa,UACZ,eAAC,IAAM,WACL,cAAC,IAAK,CAAC1G,KAAM,gBAAiB2G,QAAS,cAACJ,EAAO,MAC/C,eAAC,IAAK,CACJvG,KAAI,UAAKF,IAAcE,MACvB2G,QAAS,cAAC,EAAoB,IAAI,UAElC,cAAC,IAAK,CACJ3G,KAAI,UAAKC,IAAoBD,MAC7B2G,QAAS,cAACN,EAAW,MAEvB,cAAC,IAAK,CACJrG,KAAI,UAAKE,IAAoBF,MAC7B2G,QAAS,cAACH,EAAW,iB,0BC5BtBI,EAAYC,YAAY,CACnCC,QAAS,CACPC,QAAS,CAIPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,WAMhBE,WAAY,CACVC,QAASC,IAAS,OAGtBC,QAAS,ICCIC,EAhBuB,WACpC,OACE,cAAC,gBAAa,CAACf,SAAU,8BAAK,yBAA2B,SACvD,cAAC,IAAgB,UACf,cAAC,IAAY,UACX,cAACgB,EAAA,EAAa,CAACC,MAAOf,EAAU,SAC9B,qBAAKhB,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAU,SAC9C,cAAC,EAAM,eCfrB8B,SACE,cAAC,aAAgB,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,W","file":"static/js/main.80871c6b.chunk.js","sourcesContent":["export type AppRouteParams = {\n  userId: string;\n};\n\nexport const AppRouteBooks = {\n  title: `Book search`,\n  path: `/mybookshelf/books/:userId`,\n};\n\nexport const AppRouteBooksSearch = {\n  title: `Book search`,\n  path: `/mybookshelf/books/:userId/search`,\n};\n\nexport const AppRouteManageBooks = {\n  title: `My books`,\n  path: `/mybookshelf/books/:userId/manage`,\n};\n","import {\n  FunctionComponent,\n  createContext,\n  useState,\n  Dispatch,\n  SetStateAction,\n} from \"react\";\nimport { enqueueSnackbar } from \"notistack\";\n\ninterface IUserContext {\n  user: IUser | undefined;\n  setUser: Dispatch<SetStateAction<IUserContext[\"user\"]>>;\n  login: (email: string) => void;\n  isUserLoading: boolean;\n}\n\nexport const UserContext = createContext<IUserContext>({} as IUserContext);\n\ninterface Props {}\n\nexport const Provider: FunctionComponent<Props> = ({ children }) => {\n  // const apiBaseUrl = \"https://thawing-sierra-15233.herokuapp.com/api/v1\";\n  const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n  const [user, setUser] = useState<IUser | undefined>();\n  const [isUserLoading, setIsUserLoading] = useState(false);\n\n  const login = async (email: string) => {\n    setIsUserLoading(true);\n    const url = `${apiBaseUrl}/users`;\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email }),\n      }).then((res) => {\n        return res.json();\n      });\n      setUser({ email: response.email, id: response.id });\n      setIsUserLoading(false);\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      setIsUserLoading(false);\n      throw new Error(error);\n    }\n  };\n\n  return (\n    <UserContext.Provider value={{ user, setUser, login, isUserLoading }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport interface IUser {\n  email: string;\n  id: number;\n}\n\nexport type IUserInput = {\n  email: string;\n};\n","import { Dispatch, SetStateAction, useContext, useEffect } from \"react\";\nimport { useCallback } from \"react\";\nimport { FunctionComponent, createContext, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { UserContext } from \"./UserContext\";\nimport { enqueueSnackbar } from \"notistack\";\n\ninterface IBooksContext {\n  userBooks: IUserBook[];\n  getBook: (id: string) => void;\n  selectedBook: IGoogleBook | undefined;\n  setSelectedBook: Dispatch<SetStateAction<IBooksContext[\"selectedBook\"]>>;\n  addBook: (userInput: Partial<IUserBook>) => void;\n  deleteBook: (id: number) => void;\n  bookSearch: (searchParams: ISearchParams) => void;\n  searchResults: IGoogleBook[] | undefined;\n  inUserList: (bookId: string) => IUserBook | undefined;\n  updateStatus: (id: number, status: boolean) => void;\n  updateRating: (id: number, newRating: number) => void;\n  isSearchLoading: boolean;\n}\n\nexport const BooksContext = createContext<IBooksContext>({} as IBooksContext);\n\ninterface Props {}\n\nexport const Provider: FunctionComponent<Props> = ({ children }) => {\n  // const apiBaseUrl = \"https://thawing-sierra-15233.herokuapp.com/api/v1\";\n  const apiBaseUrl = process.env.REACT_APP_API_BASE_URL;\n\n  const googleApiUrl = \"https://www.googleapis.com/books/v1/volumes\";\n\n  const { userId } = useParams();\n  const { user, setUser } = useContext(UserContext);\n\n  // All state\n  const [userBooks, setUserBooks] = useState<IUserBook[]>([]);\n  const [selectedBook, setSelectedBook] = useState<IGoogleBook | undefined>();\n  const [searchResults, setSearchResults] = useState<\n    IGoogleBook[] | undefined\n  >();\n\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\n\n  const getUser = useCallback(async () => {\n    const url = `${apiBaseUrl}/users/${userId}`;\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n      }).then((res) => {\n        return res.json();\n      });\n\n      setUser({ email: response.email, id: response.id });\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  }, [user]);\n\n  // Because we aren't using state instead of tokens or cookies, if the page is reloaded we have to get the user again\n  useEffect(() => {\n    if (!user) {\n      getUser();\n    }\n  }, [user]);\n\n  const getUserBooksList = async () => {\n    const url = `${apiBaseUrl}/books/?user_id=${user?.id.toString()}`;\n    try {\n      const response = await fetch(url, {\n        method: \"GET\",\n      }).then((res) => {\n        return res.json();\n      });\n      setUserBooks(response);\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  };\n\n  // As soon as the user signs in, get their book list\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    getUserBooksList();\n  }, [user]);\n\n  // Add a book to the user's shelf\n  const addBook = async (userInput: Partial<IUserBook>) => {\n    const userBook = {\n      ...userInput,\n      user_id: user?.id || \"\",\n    };\n    try {\n      const response = await fetch(`${apiBaseUrl}/books`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(userBook),\n      }).then((res) => {\n        return res.json();\n      });\n      const addedBook = await Promise.resolve(response);\n      if (addedBook) {\n        const clonedBooks = [...userBooks];\n        const updatedBooks = [...clonedBooks, addedBook];\n        setUserBooks(updatedBooks);\n      }\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  };\n\n  // Remove book from user's shelf\n  const deleteBook = async (id: number) => {\n    try {\n      await fetch(`${apiBaseUrl}/books/${id}`, {\n        method: \"DELETE\",\n      }).then((res) => {\n        return res;\n      });\n      const clonedBooks = [...userBooks];\n      const updatedBooks = clonedBooks.filter((book) => book.id !== id);\n      setUserBooks(updatedBooks);\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  };\n\n  // Mark a user's book as read or unread\n  const updateStatus = async (id: number, status: boolean) => {\n    try {\n      const response = await fetch(`${apiBaseUrl}/books/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ read: status }),\n      }).then((res) => {\n        return res.json();\n      });\n      const updatedBook = await Promise.resolve(response);\n      if (updatedBook) {\n        const clonedBooks = [...userBooks];\n        for (let i = 0; i < clonedBooks.length; i++) {\n          if (clonedBooks[i].id === id) {\n            clonedBooks[i].read = status;\n          }\n        }\n        setUserBooks(clonedBooks);\n      }\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  };\n\n  // update user's rating for the book - between 1-5\n  const updateRating = async (id: number, newRating: number) => {\n    try {\n      const response = await fetch(`${apiBaseUrl}/books/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ rating: newRating }),\n      }).then((res) => {\n        return res.json();\n      });\n      const updatedBook = await Promise.resolve(response);\n      if (updatedBook) {\n        const clonedBooks = [...userBooks];\n        for (let i = 0; i < clonedBooks.length; i++) {\n          if (clonedBooks[i].id === id) {\n            clonedBooks[i].rating = newRating;\n          }\n        }\n        setUserBooks(clonedBooks);\n      }\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  };\n\n  // Google books api calls\n  // For all details of a single book\n  const getBook = async (id: string) => {\n    const url = `${googleApiUrl}/${id}`;\n    try {\n      const response = await fetch(url, { method: \"GET\" }).then((res) =>\n        res.json().then((data) => data)\n      );\n      const book = await Promise.resolve(response);\n      setSelectedBook(book);\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n  };\n\n  // Search\n  const bookSearch = async (searchParams: ISearchParams) => {\n    setIsSearchLoading(true);\n    // ?q=flowers+inauthor:keyes\n    const titleQuery = searchParams.title.length\n      ? `+intitle:${searchParams.title}`\n      : \"\";\n    const authorQuery = searchParams.author.length\n      ? `+inauthor:${searchParams.author}`\n      : \"\";\n    const publisherQuery = searchParams.publisher.length\n      ? `+inpublisher:${searchParams.publisher}`\n      : \"\";\n    const keywordQuery = searchParams.keyword || \"\";\n    const query =\n      `${googleApiUrl}?q=` +\n      keywordQuery +\n      titleQuery +\n      authorQuery +\n      publisherQuery;\n\n    try {\n      const response = await fetch(query, {\n        method: \"GET\",\n      }).then((res) => {\n        return res.json();\n      });\n      const books = await Promise.resolve(response);\n      setSearchResults(books.totalItems === 0 ? [] : books.items);\n    } catch (error) {\n      enqueueSnackbar({ variant: \"error\", message: error.message });\n      throw new Error(error);\n    }\n    setIsSearchLoading(false);\n  };\n\n  const inUserList = (bookId: string): IUserBook | undefined => {\n    return userBooks.find((book) => book.book_id === bookId);\n  };\n\n  return (\n    <BooksContext.Provider\n      value={{\n        userBooks,\n        getBook,\n        selectedBook,\n        setSelectedBook,\n        addBook,\n        deleteBook,\n        bookSearch,\n        searchResults,\n        inUserList,\n        updateStatus,\n        updateRating,\n        isSearchLoading,\n      }}\n    >\n      {children}\n    </BooksContext.Provider>\n  );\n};\n\nexport interface IUserBook {\n  id: number;\n  book_id: string;\n  title: string;\n  authors: string; // From Google as array, but can't store array so join/split\n  subtitle: string;\n  publishedDate: string;\n  description: string;\n  smallThumbnail: string;\n  thumbnail: string;\n  infoLink: string;\n  user_id: number;\n  read?: boolean;\n  rating?: number;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface ISearchParams {\n  keyword: string;\n  title: string;\n  author: string;\n  publisher: string;\n}\n\nexport interface IGoogleBook {\n  kind?: string;\n  id: string;\n  etag?: string;\n  selfLink?: string;\n  volumeInfo?: {\n    title?: string;\n    subtitle?: string;\n    authors?: string[];\n    publishedDate?: string;\n    description?: string;\n    industryIdentifiers?: [\n      {\n        type?: string;\n        identifier?: string;\n      },\n      {\n        type?: string;\n        identifier?: string;\n      }\n    ];\n    readingModes?: {\n      text?: boolean;\n      image?: boolean;\n    };\n    pageCount?: number;\n    printType?: string;\n    categories?: string[];\n    maturityRating?: string;\n    allowAnonLogging?: boolean;\n    contentVersion?: string;\n    panelizationSummary?: {\n      containsEpubBubbles?: boolean;\n      containsImageBubbles?: boolean;\n    };\n    imageLinks?: {\n      smallThumbnail?: string;\n      thumbnail?: string;\n    };\n    language?: string;\n    previewLink?: string;\n    infoLink?: string;\n    canonicalVolumeLink?: string;\n  };\n  saleInfo?: {\n    country?: string;\n    saleability?: string;\n    isEbook?: boolean;\n  };\n  accessInfo?: {\n    country?: string;\n    viewability?: string;\n    embeddable?: boolean;\n    publicDomain?: boolean;\n    textToSpeechPermission?: string;\n    epub?: {\n      isAvailable?: boolean;\n    };\n    pdf?: {\n      isAvailable?: boolean;\n    };\n    webReaderLink?: string;\n    accessViewStatus?: string;\n    quoteSharingAllowed?: boolean;\n  };\n  searchInfo?: {\n    textSnippet?: string;\n  };\n}\n","import { FunctionComponent } from \"react\";\nimport { CircularProgress } from \"@mui/material\";\n\ninterface Props {}\n\nconst PageLoading: FunctionComponent<Props> = () => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <CircularProgress size={\"40px\"} />\n    </div>\n  );\n};\n\nexport default PageLoading;\n","import { FunctionComponent } from \"react\";\nimport { Provider as BooksProvider } from \"../../contexts/BooksContext\";\nimport { Outlet } from \"react-router-dom\";\n\ninterface Props {}\n\nconst BooksContextProvider: FunctionComponent<Props> = () => {\n  return (\n    <BooksProvider>\n      <Outlet />\n    </BooksProvider>\n  );\n};\n\nexport default BooksContextProvider;\n","import { FunctionComponent, Suspense, lazy } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport {\n  AppRouteBooks,\n  AppRouteBooksSearch,\n  AppRouteManageBooks,\n} from \"./AppRoutes\";\nimport PageLoading from \"./Components/PageLoading/PageLoading\";\nimport BooksContextProvider from \"./Components/Books/BooksContextProvider\";\nconst BooksSearch = lazy(() => import(\"./Components/Books/BooksSearch\"));\nconst Welcome = lazy(() => import(\"./Components/Welcome/Welcome\"));\nconst ManageBooks = lazy(() => import(\"./Components/Books/ManageBooks\"));\n\ninterface Props {}\n\nconst Router: FunctionComponent<Props> = () => {\n  return (\n    <Suspense fallback={<PageLoading />}>\n      <BrowserRouter>\n        <Routes>\n          <Route path={\"/mybookshelf/\"} element={<Welcome />} />\n          <Route\n            path={`${AppRouteBooks.path}`}\n            element={<BooksContextProvider />}\n          >\n            <Route\n              path={`${AppRouteBooksSearch.path}`}\n              element={<BooksSearch />}\n            />\n            <Route\n              path={`${AppRouteManageBooks.path}`}\n              element={<ManageBooks />}\n            />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </Suspense>\n  );\n};\n\nexport default Router;\n","import { createTheme } from \"@mui/material/styles\";\nimport { blueGrey } from \"@mui/material/colors\";\n\nexport const bookTheme = createTheme({\n  palette: {\n    primary: {\n      // light: \"#cb7151\",\n      // main: \"#e28743\",\n      // dark: \"#be4d25\",\n      light: \"#f0a9a4\",\n      main: \"#d4847f\",\n      dark: \"#145369\",\n      contrastText: \"#2e2e2e\",\n    },\n    secondary: {\n      light: \"#2596be\",\n      main: \"#145369\",\n      dark: \"#2e2e2e\",\n      contrastText: \"#ffffff\",\n      // light: \"#6c6c6c\",\n      // main: \"#2e2e2e\",\n      // dark: \"#1e1e1e\",\n      // contrastText: \"#ffffff\",\n    },\n    background: {\n      default: blueGrey[\"100\"],\n    },\n  },\n  spacing: 8,\n});\n","\"use client\";\n\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FunctionComponent } from \"react\";\nimport \"./App.css\";\nimport { Provider as UserProvider } from \"./contexts/UserContext\";\nimport { SnackbarProvider } from \"notistack\";\nimport Router from \"./Router\";\nimport { ThemeProvider } from \"@mui/material\";\nimport { bookTheme } from \"./theme/BookTheme\";\n\ninterface Props {}\n\nconst App: FunctionComponent<Props> = () => {\n  return (\n    <ErrorBoundary fallback={<div>Something went wrong</div>}>\n      <SnackbarProvider>\n        <UserProvider>\n          <ThemeProvider theme={bookTheme}>\n            <div style={{ width: \"100vw\", height: \"100vh\" }}>\n              <Router />\n            </div>\n          </ThemeProvider>\n        </UserProvider>\n      </SnackbarProvider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}